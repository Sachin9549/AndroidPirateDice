// the folder contains the result
def preprocessRoot = 'preprocessed'
// the folder contains preprocessed sources
def preprocessSrc = preprocessRoot+'/src'
// the folder contains preprocessed resources
def preprocessRes = preprocessRoot+'/res'

// the original root folder path
def originalRoot = 'src/main'
// the original java sources folder
def originalSrc = originalRoot+'/java'
// the original resource folder
def originalRes = originalRoot+'/res'

configurations {
    jcp
}

dependencies{
    jcp('com.igormaznitsa:jcp:6.0.0'){
        exclude group: 'org.apache.maven.*'
        exclude group: 'org.codehaus.*'
    }
}

android {
    sourceSets.main.java.srcDirs = [preprocessSrc]
    sourceSets.main.resources.srcDirs = [preprocessRes]
}

task preprocess << {
    println('--------------------------')

    def jcpjar = file(project.configurations.jcp.find { it.name.startsWith("jcp-") })
    println("Preprocessor JAR : "+jcpjar)
    ant.taskdef(resource: 'com/igormaznitsa/jcp/ant/antlib.xml', classpath: jcpjar)

    println('Preprocessed SRC : '+preprocessSrc)
    ant.preprocess(excluded:"bin,jpg,png,ico,gif.svg", processing:'java,xml', source: originalSrc, destination: preprocessSrc){
        global(name:'someTestGlobalVar',value:'its value')
    }

    println('Preprocessed RES : '+preprocessRes)
    ant.preprocess(excluded:"bin,jpg,png,ico,gif.svg", processing:'java,xml', source: originalRes, destination: preprocessRes)

    println('--------------------------')
}

preBuild.dependsOn preprocess